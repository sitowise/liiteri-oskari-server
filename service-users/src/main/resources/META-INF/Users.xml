<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Users">

    <typeAlias alias="User" type="fi.nls.oskari.domain.User" />

    <resultMap id="UsersResult" class="User">
        <result property="id" column="id" />
        <result property="firstname" column="first_name" />
        <result property="lastname" column="last_name" />
        <result property="email" column="email" />
        <result property="uuid" column="uuid" />
        <result property="screenname" column="user_name" />
        <result property="attributes" column="attributes" />
        <result property="tosAccepted" column="tos_accepted" />
    </resultMap>

    <statement id="addUser" resultClass="Long"
               parameterClass="User">
        INSERT INTO oskari_users (
            first_name,
            last_name,
            user_name,
            email,
            uuid,
            attributes,
            tos_accepted
        )
        VALUES (
            #firstname#,
            #lastname#,
            #screenname#,
            #email#,
            #uuid#,
            #attributes#,
            #tosAccepted#
        )
        RETURNING id
    </statement>

    <statement id="updateUser" parameterClass="User">
        update
        oskari_users set
        first_name = #firstname#,
        last_name = #lastname#,
        user_name = #screenname#,
        email = #email#,
        attributes = #attributes#,
        tos_accepted = #tosAccepted#
        where id = #id#
    </statement>

    <select id="findAll" resultMap="UsersResult">
        select id, first_name, last_name, user_name, email, uuid, attributes, tos_accepted from oskari_users order by user_name
    </select>

    <select id="findByUserId" parameterClass="Long" resultMap="UsersResult">
        select id, first_name, last_name, user_name, email, uuid, attributes, tos_accepted from oskari_users where id = #id#
    </select>

    <select id="findByUserName" parameterClass="String" resultMap="UsersResult">
        select id, user_name, first_name, last_name, email, uuid, attributes, tos_accepted from oskari_users where user_name = #id#
    </select>

    <select id="login" parameterClass="java.util.HashMap" resultClass="String">
        select login
        from oskari_jaas_users
        where login = #username# AND password=#password#
    </select>

    <select id="getPassword" parameterClass="java.util.HashMap" resultClass="String">
        select password
        from oskari_jaas_users
        where login = #username#
    </select>

    <statement id="insertPassword" parameterClass="java.util.HashMap">
        INSERT INTO oskari_jaas_users (
            password,
            login
        )
        VALUES (
            #password#,
            #username#
        )
    </statement>

    <update id="updatePassword" parameterClass="java.util.HashMap">
        update oskari_jaas_users
        set password = #password#
        where login = #username#
    </update>

    <delete id="deletePassword" parameterClass="java.util.HashMap">
        delete from oskari_jaas_users where login = #username#
    </delete>

    <delete id="deleteById" parameterClass="Long">
        delete from oskari_users where id = #id#
    </delete>

</sqlMap>